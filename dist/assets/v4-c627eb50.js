const v=n=>new Promise((d,r)=>setTimeout(()=>d(void 0),n));var e=[];for(var c=0;c<256;++c)e.push((c+256).toString(16).slice(1));function a(n,d=0){return(e[n[d+0]]+e[n[d+1]]+e[n[d+2]]+e[n[d+3]]+"-"+e[n[d+4]]+e[n[d+5]]+"-"+e[n[d+6]]+e[n[d+7]]+"-"+e[n[d+8]]+e[n[d+9]]+"-"+e[n[d+10]]+e[n[d+11]]+e[n[d+12]]+e[n[d+13]]+e[n[d+14]]+e[n[d+15]]).toLowerCase()}var o,i=new Uint8Array(16);function m(){if(!o&&(o=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!o))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(i)}var y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const p={randomUUID:y};function U(n,d,r){if(p.randomUUID&&!d&&!n)return p.randomUUID();n=n||{};var t=n.random||(n.rng||m)();if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,d){r=r||0;for(var u=0;u<16;++u)d[r+u]=t[u];return d}return a(t)}export{v as s,U as v};
